<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.risk.controller.service.dao.ClientContactDao">
    <resultMap id="getMap" type="com.risk.controller.service.entity.ClientContact">
    </resultMap>

    <insert id="saveBatch" parameterType="list">
        INSERT INTO `zx_risk`.`client_contact` ( `user_id`, `nid`, `phone`, `name`, `contacts_phone`)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.userId},#{item.nid},#{item.phone},#{item.name},#{item.contactsPhone}
            )
        </foreach>
        on duplicate key update
        name = VALUES(name)
    </insert>

    <select id="getCallNumByDay" resultType="map" parameterType="map">
        SELECT
            COUNT(1) callNum,
            IFNULL(SUM(duration),0) callTime
        FROM
            client_contact a,
            operator_call_record b
        WHERE
            a.nid =#{nid}
        AND a.nid = b.nid
        AND a.contacts_phone = b.peer_number
        AND a.contacts_phone LIKE '1%'
        AND LENGTH(a.contacts_phone) = 11
        <if test="type != null and ''!=type" >
            AND b.location_type = #{type}
        </if>
        AND b.time >= DATE_SUB(FROM_UNIXTIME(#{applyTime} / 1000), INTERVAL #{day} DAY )
    </select>

    <select id="getCallAndCalledByDay" parameterType="map" resultType="map">
        SELECT
            count(1) contactNum,
            IFNULL(sum(c.minCallNum),0) callNum,
            IFNULL(SUM(c.allCallTime),0) callTime
        from (
            SELECT
                a.contacts_phone phone,
                ROUND((a.callNum+b.callNum)/2) minCallNum,
                a.callTime + b.callTime allCallTime
            FROM (
                SELECT
                    a.contacts_phone,
                    COUNT(1) callNum,
                    SUM(duration) callTime
                FROM
                    client_contact a,
                    operator_call_record b
                WHERE
                    a.nid = #{nid}
                    AND a.nid = b.nid
                    AND a.contacts_phone = b.peer_number
                    AND a.contacts_phone LIKE '1%'
                    AND LENGTH(a.contacts_phone) = 11
                    AND b.location_type = 'DIAL'
                    AND b.time >= DATE_SUB(FROM_UNIXTIME(#{applyTime} / 1000),INTERVAL #{day} DAY)
                    GROUP BY a.contacts_phone
                ) a, (
                SELECT
                    a.contacts_phone,
                    COUNT(1) callNum,
                    SUM(duration) callTime
                FROM
                    client_contact a,
                    operator_call_record b
                WHERE
                    a.nid = #{nid}
                    AND a.nid = b.nid
                    AND a.contacts_phone = b.peer_number
                    AND a.contacts_phone LIKE '1%'
                    AND LENGTH(a.contacts_phone) = 11
                    AND b.location_type = 'DIALED'
                    AND b.time >= DATE_SUB(FROM_UNIXTIME(#{applyTime} / 1000),INTERVAL #{day} DAY)
                    GROUP BY a.contacts_phone
                ) b
            WHERE a.contacts_phone = b.contacts_phone
        ) c
    </select>

    <select id="getRepeatPersons" resultType="int" parameterType="map">
        SELECT COUNT(1) FROM (
        SELECT c1.nid,c1.name,c1.contacts_phone,COUNT(DISTINCT NAME) AS repeatNum FROM `client_contact` c1
        WHERE nid = #{nid} AND  LENGTH(contacts_phone) = 11 AND contacts_phone LIKE '1%'
        GROUP BY c1.contacts_phone
        ) t WHERE t.repeatNum > #{repeatNum}
    </select>


    <select id="getValidCallDetail" resultType="int" parameterType="map">
        SELECT
            COUNT(1) cnt
        FROM
            client_contact a,
            operator_call_record b
        WHERE
            a.user_id = b.user_id
            AND a.nid = b.nid
            AND a.contacts_phone = b.peer_number
            AND a.nid = #{nid}
            AND b.user_id = #{userId}
            AND b.peer_number LIKE '1%'
            AND LENGTH(b.peer_number) = 11
            AND a.contacts_phone LIKE '1%'
            AND LENGTH(a.contacts_phone) = 11
            AND b.time >= DATE_SUB(FROM_UNIXTIME(#{applyTime} / 1000),INTERVAL #{days}  DAY)
    </select>

    <select id="getAllCallDetail" resultType="int" parameterType="map">
        SELECT
        COUNT(1) cnt
        FROM
        operator_call_record b
        WHERE
        b.user_id = #{userId}
        AND b.nid = #{nid}
        AND b.peer_number LIKE '1%'
        AND LENGTH(b.peer_number) = 11
        AND b.time >= DATE_SUB(FROM_UNIXTIME(#{applyTime} / 1000),INTERVAL #{days} DAY);
    </select>


    <select id="getOpertorCallAndCalledNum" resultType="map" parameterType="map">
        SELECT
            COUNT(1) phoneNum,ifnull(SUM(c.num),0) timeNum
        from (
            SELECT
                a.peer_number,
                ROUND((b.cnt+ a.cnt)/2) num
            from (
                SELECT
                    peer_number,COUNT(1) cnt
                FROM
                    operator_call_record b
                WHERE
                    b.user_id = #{userId}
                    AND b.nid = #{nid}
                    AND b.location_type = 'DIALED'
                    AND peer_number LIKE '1%'
                    AND LENGTH(peer_number) = 11
                    AND b.time >= DATE_SUB(FROM_UNIXTIME(#{applyTime} / 1000),INTERVAL #{days} DAY)
                GROUP BY peer_number
            ) a ,(
            SELECT
                peer_number,COUNT(1) cnt
            FROM
                operator_call_record b
            WHERE
                b.user_id = #{userId}
                AND b.nid = #{nid}
                AND b.location_type = 'DIAL'
                AND peer_number LIKE '1%'
                AND LENGTH(peer_number) = 11
                AND b.time >= DATE_SUB(FROM_UNIXTIME(#{applyTime} / 1000),INTERVAL #{days} DAY)
            GROUP BY peer_number
            ) b
            WHERE a.peer_number = b.peer_number
        ) c
    </select>

</mapper>